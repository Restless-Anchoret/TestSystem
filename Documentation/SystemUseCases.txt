System use cases:

- Попытка авторизации гостя
	Принятие от гостя логина и пароля
	Получить хэш введённого пароля
	Проверка, есть ли в базе данных пользователь с заданными логином и хэшем пароля
		Если нет, то запросить заново логин и пароль
		Если да, авторизовать пользователя под заданным логином

- Регистрация пользователя в системе (с некоторыми заданных логином, паролем, ролью и параметром actual)
	Получить от гостя логин и пароль
	Проверка, есть ли уже в базе данных пользователь с таким логином
	Если да, отказать в регистрации
	Если нет
		Проверить, удовлетворяет ли пароль требованиям
		Если нет, то отказать в регистрации
		Если да
			Получить хэш пароля
			Запомнить дату регистрации (текущее время)
			Записать информацию о пользователе в базу данных (логин, хэш пароля, роль, actual - заданные)

- Регистрация гостя в качестве участника (производимая им самим)
	Получить от гостя новые логин и пароль
	Попытаться провести регистрацию гостя в качестве участника с параметром actual = true
	Если регистрация прошла успешно, авторизовать участника в системе под заданных логином
	Если было отказано в регистрации, то запросить новые логин и пароль
	
- Добавление нового участника (модератором)
	Выбор логина и пароля нового участника
	Попытаться провести регистрацию нового участника с параметром actual = false

- Добавление нового модератора (администратором)
	Выбор логина и пароля нового модератора
	Попытаться провести регистрацию нового модератора с параметром actual = true
	
- Редактирование пользователей (модератором или администратором)
	Фильтрация всех зарегистрированных участников по некотором критерию:
		логину;
		по наличии регистрации на некоторое соревнование;
		роли (участник или модератор) (модераторов можно просматривать только администратору);
		возможны другие критерии
	Вывести информацию: логин, роль, actual
	Выставление значений параметра actual для пользователей

- Вывод списка всех соревнований (в зависимости от роли авторизованного пользователя)
	Если авторизован участник, вывести список всех видимых соревнований
	Если авторизован модератор (или администратор, дальше не уточняется), вывести список всех соревнований
	Вывести информацию (на экран): название, статус (before, coding, и т. д), начало, длительность,
		набор задач или соревнование (hold_competition), тип регистрации
	
- Вывод задач по определённому соревнованию
	(Для участников только по видимым соревнованиям, для модераторов - по всем)
	Вывести информацию (на экран): номер задачи, название, наличие условия к задаче

- Выгрузка условия по определённой задаче (если к задаче прикреплено условие)
	(Для участников только по видимым соревнованиям, для модераторов - по всем)

- Вывод списка посылок определённого участника по определённому соревнованию
	(Для участников доступен просмотр только своих посылок, для модератора - посылок всех участников)
	Вывести информацию (на экран): логин (только для модератора), время посылки, компилятор, вердикт, время решения

- Вывод кода определённой посылки
	(Для участников доступен код только своих посылок, для модератора - посылок всех участников)
	
- Вывод списка всех соревнований, на которые определённый участник подавал заявку
	Вывести информацию (на экран): название соревнования, статус (before, coding, и т. д.), начало,
		статус регистрации, количество решённых задач, место

- Вывод результатов определённого соревнования (не являющегося набором задач)
	Если авторизован участник, и свойство "show_monitor" установлено как false, не показывать монитор
	Иначе
		Если соревнование не начато (before), не показывать монитор
		Иначе
			Если мониторинг по данному соревнованию ещё не запущен
				Запустить поток мониторинга текущих результатов
				Дождаться формирования текущих результатов
			Если соревнование ещё идёт, и ещё не было заморозки (coding), или соревнование уже завершено (finished), показать текущие результаты (из xml-файла)
			Иначе
				Если авторизован участник, и в файловой системе ещё нет xml-файла с видимыми результатами
					Дождаться создания файла с видимыми результатами
				Если авторизован участник, показать видимые результаты
				Если авторизован модератор, показать текущие результаты

- Запуск мониторинга текущих результатов
	Проверка, запущен ли уже мониторинг по данному соревнованию (в пуле потоков мониторинга)
	Если ещё не запущен, создать новый поток и запустить его выполнение

- Мониторинг текущих результатов соревнования (в отдельном потоке)
	Получить из базы данных список всех участников, зарегистрированных на соревнование
	Записать в базу данных информацию о результатах каждого участника по каждой задаче из данного соревнования (нулевые результаты)
	Собрать информацию о результатах всех участников по каждой задаче
	Вывести результаты в xml-файл с текущими результатами
	Если соревнование в состоянии заморозки (frozen) или системного тестирования (sys_test), создать xml-файл с видимыми результатами
		(скопировать текущие результаты)
	Если соревнование идёт или идёт его системное тестирование
		Ждать некоторое количество секунд (30)
		Начать заново со сбора информации о результатах участников по каждой задаче
	Иначе завершить выполнение потока

- Принятие заявки участника на участие в соревновании
	Если соревнование открытое
		Занести в базу данных информацию о том, что участник зарегистрирован на участие в соревновании
			(без персональных данных (null), registered = true)
	Если соревнование модерируемое
		Принять от участника персональные данные
		Занести в базу данных персональные данные
		Занести в базу данных информацию о том, что участник подал заявку на участие в соревновании
			(со ссылкой на персональные данные, registered = false)
	
- Регистрация участника на соревнование модератором
	Если соревнование модерируемое
		Выбрать участника из списка подававших заявку
		Если нужно, исправить персональные данные и сохранить их в базе данных
		Установить заявку участника в состояние registered = true (таблица participation)
	Если соревнование закрытое
		Выбрать участника из списка всех участников (выбрать специально созданных участников)
		Принять персональные данные участника
		Записать персональные данные участника в базу данных
		Занести в базу данных информацию о том, что участник зарегистрирован на участие в соревновании
			(со ссылкой на персональные данные, registered = true)

- Проверка посылки на одном тесте и вынос вердикта
	Если не найдены тесты или чекер - вернуть результат Fail
	Иначе
		Запуск решения с передачей ему тестовых данных
		Если решение выполняется слишком долго (дольше ограничения) - вернуть результат Time limit
		Если процесс выполнения решения завершился вовремя
			Если код выполнения отличен от 0, вернуть Runtime Error
			Если код выполнения - 0
				Запуск чекера с передачей ему тестовых данных и результатов решения
				Получение результата выполнения процесса чекера
				Возвращение результата (Accepted, Wrong answer или Fail)
				
- Проверка посылки на группе тестов и возврат списка вердиктов (на каждом тесте) (с параметром "до первой неудачи" / "все тесты")
	Проверить посылку на очередном тесте
	Записать вердикт в список
	Если выбран параметр "все тесты" или был вердикт Accepted продолжить для следующего теста
	Иначе вернуть список
	
- Проверка посылки на всех тестах (с заданным набором настроек: "только претесты" / "системное тестирование"; система оценивания)
	Если не найден файл решения - вернуть Fail
	Иначе
		Компиляция решения
		Если при компиляции были ошибки, вернуть Compilation error
		Если компиляция прошла успешно
			Проверка на тестах группы Samples (с параметром "до первой неудачи")
			Если проверка некоторого теста неудачна - вернуть вердикт, аналогичный вердикту неудачного теста, и номер теста
			Если все тесты Samples прошли проверку (получили вердикт Accepted)
				Если система оценивания - ICPC
					Если выбран параметр "только претесты"
						Проверка на группе претестов (с параметром "до первой неудачи")
						Если все тесты получили вердикт Accepted - вернуть Pretests accepted
						Иначе - вернуть вердикт, аналогичный вердикту неудачного теста, и номер теста
					Если выбран параметр "системное тестирование"
						Проверка на очередной группе тестов (с параметром "до первой неудачи")
							(учитываются группы Pretests, Tests1, ... , Tests8)
						Если на очередной группе на некотором тесте неудача, вернуть вердикт, аналогичный вердикту неудачного теста, и номер теста
						Если на всех тестах во всех группах вердикт Accepted, вернуть Accepted
				Если система оценивания - IOI
					Если выбран параметр "только претесты"
						Проверка на группе претестов (с параметром "все тесты")
					Если выбран параметр "системное тестирование"
						Проверка на всех группах тестов (с параметром "все тесты")
					Посчитать количество баллов за посылку (умножить количество вердиктов Accepted на количество очков за тест)
					Вернуть вердикт Partial accepted, количество очков за посылку, номер первого неудачного теста (если есть)
					
- Непрерывная проверка посылок из блокирующей очереди (в отдельном потоке)
	Взять информацию об очередной посылке (объект TestingInfo) из очереди (дождавшись)
	Выполнить проверку посылки (с параметрами, полученными вместе с посылкой) и получить вердикт
	Отправить результат проверки (объект TestingInfo) в другую блокирующую очередь
	Начать заново
	
- Принятие посылки в виде файла
	Сохранить файл посылки в файловой системе
	Записать информацию о посылке в базу данных (с вердиктом Waiting)
	Если посылка принята от участника во время соревнования
		Отправить информацию о посылке (объект TestingInfo) в очередь на проверку
			(с параметрами, взятыми из информации о соревновании: "только претесты" / "системное тестирование"; система оценивания;
			"проверка посылки участника во время соревнования")
		Если мониторинг по данному соревнованию ещё не запущен, запустить его (в отдельном потоке)
	Если посылка принята от участника во время дорешивания, либо от модератора
		Отправить информацию о посылке (объект TestingInfo) в очередь на проверку
			(с параметром "системное тестирование"; систему оценивания узнать из информации о соревновании;
			"проверка посылки вне соревнования")
			
- Системное тестирование для некоторого соревнования
	Получить список всех посылок по соревнованию, отосланных во время соревнования
	Для каждой посылки с вердиктами Accepted, Partial accepted и Pretests accepted отправить информацию о посылке (объект TestingInfo)
		в очередь на проверку (с параметрами "системное тестирование", систему оценивания узнать из информации о соревновании;
		"проверка посылки участника во время соревнования")
		
- Запуск проверки посылки модератором
	Формирование объекта TestingInfo (с указанием цели тестирования "просмотр полных результатов тестирования посылки")
	Отправить информацию о посылке в очередь на проверку
	Дождаться результата и вывести его
	
- Слежение за результатами проверки и их обработка (в отдельном потоке)
	Дождаться получения результата проверки в очереди
	Получить результат проверки (объект TestingInfo)
	Если цель тестирования - "просмотр полных результатов тестирования посылки"
		Оповестить о завершении проверки (для вывода результата на экран)
	Иначе
		Записать результат тестирования в базу данных (вердикт, номер первого неудачного теста, количество баллов)
		Если цель тестирования - "проверка посылки участника во время соревнования"
			Получить список всех посылок данного участника по данной задаче
			Вычислить оценку решения задачи для данного участника (по данной системе оценивания)
			Записать оценку решения в базу данных
	Начать заново
	
- Оценка решения задачи (по полному набору посылок участника по задаче)
	Если система оценивания ICPC
		Если в списке посылок нет ни одного вердикта Accepted, то в результате points = 0, fine = 0
		Если есть хотя бы один вердикт Accepted, то в результате points = 1, fine высчитывается как количество неудачных посылок
			до первого Accepted, умноженное на 20, плюс количество минут, прошедших с начала контеста до первой посылки с вердиктом Accepted
	Если система оценивания IOI
		Если последняя посылка с вердиктом Partial accepted
			В результате fine = 0, points берётся как количество баллов, зачисленное по последней посылке
		Если последняя посылка неудачная
			В результате fine = 0, points = 0
			
- Формальное завершение соревнования
	Собрать информацию о результатах из xml-файла с текущими результатами по данному соревнованию
	Записать их в базу данных
	Установить для данного соревнования статус "finished"
			
- Добавление задач в глобальный архив
	Принять от модератора имя новой задачи
	Выбор типа задачи (coding, question)
	Добавить новую задачу в базу данных (с состоянием validated = false)
	
- Редактирование задачи в глобальном архиве
	Принять новое имя задачи
	Выбор типа чекера (проверка на совпадение двух файлов, либо запуск специальной программы)
	Выбор свойства "имеется файл с условием"
	Добавление групп тестов
	Добавление авторских решений
	Выбор свойства "validated"
	Записать информацию о задаче в базу данных
	
- Добавление групп тестов
	Выбор типа группы (Samples, Pretests, Tests1, ... , Tests8)
	Принять количество тестов, количество баллов за один тест
	Добавить информацию о группе тестов для данной задачи в базу данных
	
- Добавление авторского решения
	Принять файл решения
	Выбор компилятора для решения
	Добавить информацию об авторском решении в базу данных

- Добавление нового соревнования
	Выбор параметров соревнования (название соревнования; набор задач или соревнование; тип оценивания; тип регистрации)
	Добавить соревнование в базу данных (со значениями:
		visible = false;
		show_monitor = false;
		pretests_only = false;
		practice_permition = false;
		finished = false)
	
- Редактирование соревнования
	Выбор нового названия соревнования
	Установление новых значений параметров visible, show_monitor, pretests_only, practice_permition
	Добавление задач в соревнование (из списка задач, прошедших валидацию)
	Установление времени начала соревнования, длительности соревнования и длительности заморозки
	Запись информации о соревновании в базу данных
	
- Добавление задачи в соревнование
	Выбор номера задачи в строковом виде
	Выбор задачи из списка прошедших валидацию (по названию задачи)
	Добавление в базу данных информации о прикреплении задачи к соревнованию (competition_problem)
	


TestingInfo
	Объекты этого класса формируются для отправки посылки на проверку и для получения результата проверки посылки
	Класс инкапсулирует следующую информацию:
		Цель тестирования ("проверка посылки участника во время соревнования",
							"проверка посылки вне соревнования",
							"просмотр полных результатов тестирования посылки") (могут добавиться новые цели)
		ID посылки (может отсутствовать, если проверка на валидацию)
		Ссылка на файл решения
		Ссылка на папку задачи
		Система оценивания
		Тип задачи
		Параметр "претесты" / "системное тестирование"
		Информация о компиляторе
		Лимит по времени
		Лимит по памяти
		Вердикт по посылке
		Номер первого неудачного теста
		Количество баллов по посылке
		Затраченное время
		Затраченная память
		Таблица вердиктов по каждому тесту
		(возможно, дополнительная информация)